@page "/Orders"
@using LendStuff.Shared.DTOs
@using LendStuff.Shared
@using Microsoft.AspNetCore.Authorization

@inject HttpClient HttpClient
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize]

<h3>OrderPage</h3>

@*Lista upp ordrar*@

<div class="container row">
	<Virtualize Items="Orders" Context="order">
		<li class="list-group-item list-group-item-action">
			Order No: @order.OrderId LentDate: @order.LentDate BoardGameId: @order.BoardGameId
		</li>
		<a class="container nav-link" href="/orderPage/@order.OrderId">länken att klicka på</a>
	</Virtualize>
</div>




@code {
	//Hämta alla ordrar för användaren.

	public List<OrderDto> Orders = new List<OrderDto>();

	protected override async Task OnInitializedAsync()
	{
		var userInfo = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		var senderId = userInfo.User.Claims.ToList()[2].Value; //Här kan id för användaren fås fram.
		
		
		var response = await HttpClient.GetFromJsonAsync<ServiceResponse<OrderDto[]>>(HttpClient.BaseAddress + $"allUserOrders?userDtoId={senderId}");

		if (response.Success)
		{
			Orders = response.Data.ToList();
		}

		await base.OnInitializedAsync();
	}

	private async Task SelectOrder(object orderDto)
	{
		//Vill öppna ett fönster här... ett modal fönster uppepå det andra...

	}

}
